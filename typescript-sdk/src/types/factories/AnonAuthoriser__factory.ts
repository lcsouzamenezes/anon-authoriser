/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AnonAuthoriser,
  AnonAuthoriserInterface,
} from "../AnonAuthoriser";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint64",
        name: "authId",
        type: "uint64",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "anonAuthorise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authKeyAddress",
        type: "address",
      },
    ],
    name: "generateAnonAuthorisation",
    outputs: [
      {
        internalType: "uint64",
        name: "",
        type: "uint64",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555034801561003957600080fd5b50610b8c806100496000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80630d8305c01461003b578063513b3a7314610057575b600080fd5b610055600480360381019061005091906106a1565b610087565b005b610071600480360381019061006c9190610766565b6103e9565b60405161007e91906107a2565b60405180910390f35b6000600160008667ffffffffffffffff1667ffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816020015173ffffffffffffffffffffffffffffffffffffffff1614156101dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d49061081a565b60405180910390fd5b6000610207336040516020016101f39190610882565b604051602081830303815290604052610560565b905060008560ff16148061021e575060018560ff16145b1561023357601b8561023091906108cc565b94505b6000600182878787604051600081526020016040526040516102589493929190610921565b6020604051602081039080840390855afa15801561027a573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102f6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ed906109b2565b60405180910390fd5b826020015173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161035f90610a1e565b60405180910390fd5b600160008867ffffffffffffffff1667ffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556001820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff0219169055505050505050505050565b600060016000808282829054906101000a900467ffffffffffffffff166104109190610a3e565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff16815250600160008060009054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505060008054906101000a900467ffffffffffffffff169050919050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250826040516020016105a99190610af6565b604051602081830303815290604052805190602001206040516020016105d0929190610b2e565b604051602081830303815290604052805190602001209050919050565b600080fd5b600067ffffffffffffffff82169050919050565b61060f816105f2565b811461061a57600080fd5b50565b60008135905061062c81610606565b92915050565b600060ff82169050919050565b61064881610632565b811461065357600080fd5b50565b6000813590506106658161063f565b92915050565b6000819050919050565b61067e8161066b565b811461068957600080fd5b50565b60008135905061069b81610675565b92915050565b600080600080608085870312156106bb576106ba6105ed565b5b60006106c98782880161061d565b94505060206106da87828801610656565b93505060406106eb8782880161068c565b92505060606106fc8782880161068c565b91505092959194509250565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061073382610708565b9050919050565b61074381610728565b811461074e57600080fd5b50565b6000813590506107608161073a565b92915050565b60006020828403121561077c5761077b6105ed565b5b600061078a84828501610751565b91505092915050565b61079c816105f2565b82525050565b60006020820190506107b76000830184610793565b92915050565b600082825260208201905092915050565b7f4e6f20737563682070656e64696e6720617574686f7269736174696f6e000000600082015250565b6000610804601d836107bd565b915061080f826107ce565b602082019050919050565b60006020820190508181036000830152610833816107f7565b9050919050565b60008160601b9050919050565b60006108528261083a565b9050919050565b600061086482610847565b9050919050565b61087c61087782610728565b610859565b82525050565b600061088e828461086b565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d782610632565b91506108e283610632565b92508260ff038211156108f8576108f761089d565b5b828201905092915050565b61090c8161066b565b82525050565b61091b81610632565b82525050565b60006080820190506109366000830187610903565b6109436020830186610912565b6109506040830185610903565b61095d6060830184610903565b95945050505050565b7f496e76616c6964205369676e6174757265000000000000000000000000000000600082015250565b600061099c6011836107bd565b91506109a782610966565b602082019050919050565b600060208201905081810360008301526109cb8161098f565b9050919050565b7f5369676e6174757265206d69736d617463680000000000000000000000000000600082015250565b6000610a086012836107bd565b9150610a13826109d2565b602082019050919050565b60006020820190508181036000830152610a37816109fb565b9050919050565b6000610a49826105f2565b9150610a54836105f2565b92508267ffffffffffffffff03821115610a7157610a7061089d565b5b828201905092915050565b600081519050919050565b600081905092915050565b60005b83811015610ab0578082015181840152602081019050610a95565b83811115610abf576000848401525b50505050565b6000610ad082610a7c565b610ada8185610a87565b9350610aea818560208601610a92565b80840191505092915050565b6000610b028284610ac5565b915081905092915050565b6000819050919050565b610b28610b238261066b565b610b0d565b82525050565b6000610b3a8285610ac5565b9150610b468284610b17565b602082019150819050939250505056fea2646970667358221220774e94ca652888c0c424c582e61c7adab0cd9e36bf0a5d739853d73ce8d3b0e364736f6c63430008090033";

type AnonAuthoriserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnonAuthoriserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnonAuthoriser__factory extends ContractFactory {
  constructor(...args: AnonAuthoriserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AnonAuthoriser> {
    return super.deploy(overrides || {}) as Promise<AnonAuthoriser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AnonAuthoriser {
    return super.attach(address) as AnonAuthoriser;
  }
  override connect(signer: Signer): AnonAuthoriser__factory {
    return super.connect(signer) as AnonAuthoriser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnonAuthoriserInterface {
    return new utils.Interface(_abi) as AnonAuthoriserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnonAuthoriser {
    return new Contract(address, _abi, signerOrProvider) as AnonAuthoriser;
  }
}
