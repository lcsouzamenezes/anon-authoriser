/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AnonAuthoriser,
  AnonAuthoriserInterface,
} from "../AnonAuthoriser";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "anonAuthorise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authKeyAddress",
        type: "address",
      },
    ],
    name: "generateAnonAuthorisation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506109a3806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063513b3a731461003b578063a121683514610057575b600080fd5b61005560048036038101906100509190610523565b610073565b005b610071600480360381019061006c91906105bf565b610193565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100da9061066f565b60405180910390fd5b60405180602001604052803373ffffffffffffffffffffffffffffffffffffffff168152506000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b60006101bd336040516020016101a991906106d7565b604051602081830303815290604052610433565b905060008460ff1614806101d4575060018460ff16145b156101e957601b846101e69190610721565b93505b60006001828686866040516000815260200160405260405161020e9493929190610776565b6020604051602081039080840390855afa158015610230573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102ac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a390610807565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614156103c3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103ba90610873565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050505050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152508260405160200161047c919061090d565b604051602081830303815290604052805190602001206040516020016104a3929190610945565b604051602081830303815290604052805190602001209050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f0826104c5565b9050919050565b610500816104e5565b811461050b57600080fd5b50565b60008135905061051d816104f7565b92915050565b600060208284031215610539576105386104c0565b5b60006105478482850161050e565b91505092915050565b600060ff82169050919050565b61056681610550565b811461057157600080fd5b50565b6000813590506105838161055d565b92915050565b6000819050919050565b61059c81610589565b81146105a757600080fd5b50565b6000813590506105b981610593565b92915050565b6000806000606084860312156105d8576105d76104c0565b5b60006105e686828701610574565b93505060206105f7868287016105aa565b9250506040610608868287016105aa565b9150509250925092565b600082825260208201905092915050565b7f496e76616c6964207075626c6963206b65792061646472657373000000000000600082015250565b6000610659601a83610612565b915061066482610623565b602082019050919050565b600060208201905081810360008301526106888161064c565b9050919050565b60008160601b9050919050565b60006106a78261068f565b9050919050565b60006106b98261069c565b9050919050565b6106d16106cc826104e5565b6106ae565b82525050565b60006106e382846106c0565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061072c82610550565b915061073783610550565b92508260ff0382111561074d5761074c6106f2565b5b828201905092915050565b61076181610589565b82525050565b61077081610550565b82525050565b600060808201905061078b6000830187610758565b6107986020830186610767565b6107a56040830185610758565b6107b26060830184610758565b95945050505050565b7f496e76616c6964205369676e6174757265000000000000000000000000000000600082015250565b60006107f1601183610612565b91506107fc826107bb565b602082019050919050565b60006020820190508181036000830152610820816107e4565b9050919050565b7f4e6f20737563682070656e64696e6720617574686f7269736174696f6e000000600082015250565b600061085d601d83610612565b915061086882610827565b602082019050919050565b6000602082019050818103600083015261088c81610850565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156108c75780820151818401526020810190506108ac565b838111156108d6576000848401525b50505050565b60006108e782610893565b6108f1818561089e565b93506109018185602086016108a9565b80840191505092915050565b600061091982846108dc565b915081905092915050565b6000819050919050565b61093f61093a82610589565b610924565b82525050565b600061095182856108dc565b915061095d828461092e565b602082019150819050939250505056fea26469706673582212208f1fc1954676675f7fe32901e112dd3b21f82c59a711bbbd23367f8f0f18ad3364736f6c63430008090033";

type AnonAuthoriserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnonAuthoriserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnonAuthoriser__factory extends ContractFactory {
  constructor(...args: AnonAuthoriserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AnonAuthoriser> {
    return super.deploy(overrides || {}) as Promise<AnonAuthoriser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AnonAuthoriser {
    return super.attach(address) as AnonAuthoriser;
  }
  override connect(signer: Signer): AnonAuthoriser__factory {
    return super.connect(signer) as AnonAuthoriser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnonAuthoriserInterface {
    return new utils.Interface(_abi) as AnonAuthoriserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnonAuthoriser {
    return new Contract(address, _abi, signerOrProvider) as AnonAuthoriser;
  }
}
