/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AnonAuthoriser,
  AnonAuthoriserInterface,
} from "../AnonAuthoriser";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "authoriser",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "apiFlag",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "anonAuthorise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authKeyAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "apiFlag",
        type: "uint8",
      },
    ],
    name: "generateAnonAuthorisation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610bd2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b0743011461003b578063d7be1f5414610057575b600080fd5b61005560048036038101906100509190610678565b610073565b005b610071600480360381019061006c91906106ee565b6101be565b005b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100da906107c6565b60405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018260ff168152506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff1602179055509050505050565b60006101e8336040516020016101d4919061082e565b60405160208183030381529060405261054f565b905060008460ff1614806101ff575060018460ff16145b1561021457601b846102119190610878565b93505b60006001828686866040516000815260200160405260405161023994939291906108cd565b6020604051602081039080840390855afa15801561025b573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ce9061095e565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff16141561040b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610402906109ca565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff161461047d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161047490610a36565b60405180910390fd5b8660ff16816020015160ff16146104c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c090610aa2565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550505050505050505050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250826040516020016105989190610b3c565b604051602081830303815290604052805190602001206040516020016105bf929190610b74565b604051602081830303815290604052805190602001209050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061060c826105e1565b9050919050565b61061c81610601565b811461062757600080fd5b50565b60008135905061063981610613565b92915050565b600060ff82169050919050565b6106558161063f565b811461066057600080fd5b50565b6000813590506106728161064c565b92915050565b6000806040838503121561068f5761068e6105dc565b5b600061069d8582860161062a565b92505060206106ae85828601610663565b9150509250929050565b6000819050919050565b6106cb816106b8565b81146106d657600080fd5b50565b6000813590506106e8816106c2565b92915050565b600080600080600060a0868803121561070a576107096105dc565b5b60006107188882890161062a565b955050602061072988828901610663565b945050604061073a88828901610663565b935050606061074b888289016106d9565b925050608061075c888289016106d9565b9150509295509295909350565b600082825260208201905092915050565b7f496e76616c6964207075626c6963206b65792061646472657373000000000000600082015250565b60006107b0601a83610769565b91506107bb8261077a565b602082019050919050565b600060208201905081810360008301526107df816107a3565b9050919050565b60008160601b9050919050565b60006107fe826107e6565b9050919050565b6000610810826107f3565b9050919050565b61082861082382610601565b610805565b82525050565b600061083a8284610817565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108838261063f565b915061088e8361063f565b92508260ff038211156108a4576108a3610849565b5b828201905092915050565b6108b8816106b8565b82525050565b6108c78161063f565b82525050565b60006080820190506108e260008301876108af565b6108ef60208301866108be565b6108fc60408301856108af565b61090960608301846108af565b95945050505050565b7f496e76616c6964205369676e6174757265000000000000000000000000000000600082015250565b6000610948601183610769565b915061095382610912565b602082019050919050565b600060208201905081810360008301526109778161093b565b9050919050565b7f4e6f20737563682070656e64696e6720617574686f7269736174696f6e000000600082015250565b60006109b4601d83610769565b91506109bf8261097e565b602082019050919050565b600060208201905081810360008301526109e3816109a7565b9050919050565b7f417574686f7269736572206d69736d6174636800000000000000000000000000600082015250565b6000610a20601383610769565b9150610a2b826109ea565b602082019050919050565b60006020820190508181036000830152610a4f81610a13565b9050919050565b7f41504920666c6167206d69736d61746368000000000000000000000000000000600082015250565b6000610a8c601183610769565b9150610a9782610a56565b602082019050919050565b60006020820190508181036000830152610abb81610a7f565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610af6578082015181840152602081019050610adb565b83811115610b05576000848401525b50505050565b6000610b1682610ac2565b610b208185610acd565b9350610b30818560208601610ad8565b80840191505092915050565b6000610b488284610b0b565b915081905092915050565b6000819050919050565b610b6e610b69826106b8565b610b53565b82525050565b6000610b808285610b0b565b9150610b8c8284610b5d565b602082019150819050939250505056fea2646970667358221220d841a0e0934d287284312b22800e437f88a576113139564cfd944f0c473a5bf764736f6c63430008090033";

type AnonAuthoriserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnonAuthoriserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnonAuthoriser__factory extends ContractFactory {
  constructor(...args: AnonAuthoriserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AnonAuthoriser> {
    return super.deploy(overrides || {}) as Promise<AnonAuthoriser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AnonAuthoriser {
    return super.attach(address) as AnonAuthoriser;
  }
  override connect(signer: Signer): AnonAuthoriser__factory {
    return super.connect(signer) as AnonAuthoriser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnonAuthoriserInterface {
    return new utils.Interface(_abi) as AnonAuthoriserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnonAuthoriser {
    return new Contract(address, _abi, signerOrProvider) as AnonAuthoriser;
  }
}
