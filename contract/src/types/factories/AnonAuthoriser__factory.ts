/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AnonAuthoriser,
  AnonAuthoriserInterface,
} from "../AnonAuthoriser";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "authoriser",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "apiFlag",
        type: "uint8",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "anonAuthorise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authKeyAddress",
        type: "address",
      },
      {
        internalType: "uint8",
        name: "apiFlag",
        type: "uint8",
      },
    ],
    name: "generateAnonAuthorisation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610c5a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80637b0743011461003b578063d7be1f5414610057575b600080fd5b61005560048036038101906100509190610694565b610073565b005b610071600480360381019061006c919061070a565b610204565b005b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156100e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100da906107e2565b60405180910390fd5b60008160ff1611610129576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101209061084e565b60405180910390fd5b60405180604001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018260ff168152506000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160000160146101000a81548160ff021916908360ff1602179055509050505050565b600061022e3360405160200161021a91906108b6565b60405160208183030381529060405261056b565b905060008460ff161480610245575060018460ff16145b1561025a57601b846102579190610900565b93505b60006001828686866040516000815260200160405260405161027f9493929190610955565b6020604051602081039080840390855afa1580156102a1573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561031d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610314906109e6565b60405180910390fd5b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060400160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016000820160149054906101000a900460ff1660ff1660ff168152505090506000816020015160ff1611610427576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041e90610a52565b60405180910390fd5b8773ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614610499576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161049090610abe565b60405180910390fd5b8660ff16816020015160ff16146104e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104dc90610b2a565b60405180910390fd5b6000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556000820160146101000a81549060ff021916905550505050505050505050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a333200000000815250826040516020016105b49190610bc4565b604051602081830303815290604052805190602001206040516020016105db929190610bfc565b604051602081830303815290604052805190602001209050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610628826105fd565b9050919050565b6106388161061d565b811461064357600080fd5b50565b6000813590506106558161062f565b92915050565b600060ff82169050919050565b6106718161065b565b811461067c57600080fd5b50565b60008135905061068e81610668565b92915050565b600080604083850312156106ab576106aa6105f8565b5b60006106b985828601610646565b92505060206106ca8582860161067f565b9150509250929050565b6000819050919050565b6106e7816106d4565b81146106f257600080fd5b50565b600081359050610704816106de565b92915050565b600080600080600060a08688031215610726576107256105f8565b5b600061073488828901610646565b95505060206107458882890161067f565b94505060406107568882890161067f565b9350506060610767888289016106f5565b9250506080610778888289016106f5565b9150509295509295909350565b600082825260208201905092915050565b7f496e76616c6964207075626c6963206b65792061646472657373000000000000600082015250565b60006107cc601a83610785565b91506107d782610796565b602082019050919050565b600060208201905081810360008301526107fb816107bf565b9050919050565b7f41504920666c6167206d757374206265206e6f6e2d7a65726f00000000000000600082015250565b6000610838601983610785565b915061084382610802565b602082019050919050565b600060208201905081810360008301526108678161082b565b9050919050565b60008160601b9050919050565b60006108868261086e565b9050919050565b60006108988261087b565b9050919050565b6108b06108ab8261061d565b61088d565b82525050565b60006108c2828461089f565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061090b8261065b565b91506109168361065b565b92508260ff0382111561092c5761092b6108d1565b5b828201905092915050565b610940816106d4565b82525050565b61094f8161065b565b82525050565b600060808201905061096a6000830187610937565b6109776020830186610946565b6109846040830185610937565b6109916060830184610937565b95945050505050565b7f496e76616c6964205369676e6174757265000000000000000000000000000000600082015250565b60006109d0601183610785565b91506109db8261099a565b602082019050919050565b600060208201905081810360008301526109ff816109c3565b9050919050565b7f4e6f20737563682070656e64696e6720617574686f7269736174696f6e000000600082015250565b6000610a3c601d83610785565b9150610a4782610a06565b602082019050919050565b60006020820190508181036000830152610a6b81610a2f565b9050919050565b7f417574686f7269736572206d69736d6174636800000000000000000000000000600082015250565b6000610aa8601383610785565b9150610ab382610a72565b602082019050919050565b60006020820190508181036000830152610ad781610a9b565b9050919050565b7f41504920666c6167206d69736d61746368000000000000000000000000000000600082015250565b6000610b14601183610785565b9150610b1f82610ade565b602082019050919050565b60006020820190508181036000830152610b4381610b07565b9050919050565b600081519050919050565b600081905092915050565b60005b83811015610b7e578082015181840152602081019050610b63565b83811115610b8d576000848401525b50505050565b6000610b9e82610b4a565b610ba88185610b55565b9350610bb8818560208601610b60565b80840191505092915050565b6000610bd08284610b93565b915081905092915050565b6000819050919050565b610bf6610bf1826106d4565b610bdb565b82525050565b6000610c088285610b93565b9150610c148284610be5565b602082019150819050939250505056fea2646970667358221220dcc5886ec8d823580395398bf2e490edc847c8ea447bb04243f76bac4114150264736f6c63430008090033";

type AnonAuthoriserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnonAuthoriserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnonAuthoriser__factory extends ContractFactory {
  constructor(...args: AnonAuthoriserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AnonAuthoriser> {
    return super.deploy(overrides || {}) as Promise<AnonAuthoriser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AnonAuthoriser {
    return super.attach(address) as AnonAuthoriser;
  }
  override connect(signer: Signer): AnonAuthoriser__factory {
    return super.connect(signer) as AnonAuthoriser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnonAuthoriserInterface {
    return new utils.Interface(_abi) as AnonAuthoriserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnonAuthoriser {
    return new Contract(address, _abi, signerOrProvider) as AnonAuthoriser;
  }
}
