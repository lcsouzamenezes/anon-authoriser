/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type {
  AnonAuthoriser,
  AnonAuthoriserInterface,
} from "../AnonAuthoriser";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "anonAuthorise",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "authKeyAddress",
        type: "address",
      },
    ],
    name: "generateAnonAuthorisation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405260008060006101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555034801561003957600080fd5b506109a6806100496000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063513b3a731461003b578063a121683514610057575b600080fd5b61005560048036038101906100509190610526565b610073565b005b610071600480360381019061006c91906105c2565b610194565b005b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156100e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100da90610672565b60405180910390fd5b60405180602001604052803373ffffffffffffffffffffffffffffffffffffffff16815250600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555090505050565b60006101be336040516020016101aa91906106da565b604051602081830303815290604052610436565b905060008460ff1614806101d5575060018460ff16145b156101ea57601b846101e79190610724565b93505b60006001828686866040516000815260200160405260405161020f9493929190610779565b6020604051602081039080840390855afa158015610231573d6000803e3d6000fd5b505050602060405103519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156102ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102a49061080a565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206040518060200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815250509050600073ffffffffffffffffffffffffffffffffffffffff16816000015173ffffffffffffffffffffffffffffffffffffffff1614156103c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103bc90610876565b60405180910390fd5b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555050505050505050565b60006040518060400160405280601c81526020017f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152508260405160200161047f9190610910565b604051602081830303815290604052805190602001206040516020016104a6929190610948565b604051602081830303815290604052805190602001209050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104f3826104c8565b9050919050565b610503816104e8565b811461050e57600080fd5b50565b600081359050610520816104fa565b92915050565b60006020828403121561053c5761053b6104c3565b5b600061054a84828501610511565b91505092915050565b600060ff82169050919050565b61056981610553565b811461057457600080fd5b50565b60008135905061058681610560565b92915050565b6000819050919050565b61059f8161058c565b81146105aa57600080fd5b50565b6000813590506105bc81610596565b92915050565b6000806000606084860312156105db576105da6104c3565b5b60006105e986828701610577565b93505060206105fa868287016105ad565b925050604061060b868287016105ad565b9150509250925092565b600082825260208201905092915050565b7f496e76616c6964207075626c6963206b65792061646472657373000000000000600082015250565b600061065c601a83610615565b915061066782610626565b602082019050919050565b6000602082019050818103600083015261068b8161064f565b9050919050565b60008160601b9050919050565b60006106aa82610692565b9050919050565b60006106bc8261069f565b9050919050565b6106d46106cf826104e8565b6106b1565b82525050565b60006106e682846106c3565b60148201915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061072f82610553565b915061073a83610553565b92508260ff038211156107505761074f6106f5565b5b828201905092915050565b6107648161058c565b82525050565b61077381610553565b82525050565b600060808201905061078e600083018761075b565b61079b602083018661076a565b6107a8604083018561075b565b6107b5606083018461075b565b95945050505050565b7f496e76616c6964205369676e6174757265000000000000000000000000000000600082015250565b60006107f4601183610615565b91506107ff826107be565b602082019050919050565b60006020820190508181036000830152610823816107e7565b9050919050565b7f4e6f20737563682070656e64696e6720617574686f7269736174696f6e000000600082015250565b6000610860601d83610615565b915061086b8261082a565b602082019050919050565b6000602082019050818103600083015261088f81610853565b9050919050565b600081519050919050565b600081905092915050565b60005b838110156108ca5780820151818401526020810190506108af565b838111156108d9576000848401525b50505050565b60006108ea82610896565b6108f481856108a1565b93506109048185602086016108ac565b80840191505092915050565b600061091c82846108df565b915081905092915050565b6000819050919050565b61094261093d8261058c565b610927565b82525050565b600061095482856108df565b91506109608284610931565b602082019150819050939250505056fea2646970667358221220d320e813fc6c2ec1796af503ea1365b16cfec5c5abed5e5c7e6c34e17ce5763464736f6c63430008090033";

type AnonAuthoriserConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AnonAuthoriserConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AnonAuthoriser__factory extends ContractFactory {
  constructor(...args: AnonAuthoriserConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AnonAuthoriser> {
    return super.deploy(overrides || {}) as Promise<AnonAuthoriser>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AnonAuthoriser {
    return super.attach(address) as AnonAuthoriser;
  }
  override connect(signer: Signer): AnonAuthoriser__factory {
    return super.connect(signer) as AnonAuthoriser__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AnonAuthoriserInterface {
    return new utils.Interface(_abi) as AnonAuthoriserInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AnonAuthoriser {
    return new Contract(address, _abi, signerOrProvider) as AnonAuthoriser;
  }
}
